public class Main {
    
    public static void main (String[] args) {
 
        HotelStay h = new HotelStay("DoubleTree", "Austin", 3, 500);
        System.out.println(h);              

        RewardsMember member = new RewardsMember("Willie Nelson");
        System.out.println("Random city: " + member.getRandomCity());
        
        member.addHotelStay("DoubleTree", "Austin", 3, 500);
        member.addHotelStay("Hilton", "Dallas", 2, 400);
        member.addHotelStay("Marriott", "Houston", 1, 200);
        
        System.out.println(member);

        for (int i = 0; i < 5; i++) {
            System.out.println("Random city: " + member.getRandomCity());
        }
    }
}

/* first class*/
class HotelStay {

    String hotel; 
    String city; 
    int nights;
    int points;
    
    /**
     * creates a new hotel stay. 
     * @param h - the name of the hotel chain
     * @param c - the city of the stay
     * @param n - the number of nights at the hotel
     * @param p - points earned per night    
     */
    public HotelStay(String h, String c, int n, int p){
        // to be implemented
        hotel=h;
        city=c;
        nights=n;
        points=p;
    }

    /**
     * 
     * @return the hotel stay information in the following example format:
     * 5 night stay at the Marriott hotel in Atlanta (300 points per night)
     */
    public String toString(){
        // to be implemented
        return n+ " night stay at the "+h+" hotel in "+c+" ("+p+" points per night)";
    }
    
}
 
/*  Second class */ 
class RewardsMember {

    private String name;
    private HotelStay[] stays;
    private int numStays;
    
    /**
     * Creates a new member with an empty list of hotel stays.
     * Note: a member will never have more than 1000 hotel stays.
     * @param n - the member's name
     */
    public RewardsMember(String name){
        // to be implemented
        name=n;
        this.numStays=1000;
        stays=new HotelStay[numStays];
    }
    
    /**
     * creats a new HotelStay, and adds it to stays, and updates numStays
     * @param hotel - the name of the hotel chain
     * @param city - the city of the stay
     * @param nights - the number of nights at the hotel
     * @param points - points earned per night    
     */
    public void addHotelStay(String hotel, String city, int nights, int points){
        // to be implemented
        HotelStay[] stays= new HotelStay[];
        
    }    

    /**
     * 
     * @return the total number of points accumulated
     * based on the hotel stays recorded.
     */
    public int getTotalPoints() {
        // to be implemented
        int number=0; 
        for
        return number;
    }

    /**
     * @return a random city chosen from those where this RewardMember ever stayed.
     *         If the number of stays is 0, return an empty String.
     */
    public String getRandomCity() {
        // to be implemented
       if(nights.(Math.random())==0){
        return 0;
       }else{
        return city;
       }
    }

    /**
     * 
     * @return a string reporting the member name and total points earned 
     * (should call the getTotalPoints() method).
     */
    public String toString() {
        // to be implemented
        return name+ ": "+name.getTotalPoints();
    }
}