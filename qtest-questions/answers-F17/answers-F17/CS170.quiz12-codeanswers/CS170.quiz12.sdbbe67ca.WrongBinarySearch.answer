public class BinarySearch {

    public static void main(String[] args) {
        
        String[] s = {"apple", "carrot", "mango", "orange", "pineapple"};
        System.out.println("Search for apple: " + binarySearch("apple", s, 0, s.length)); // true
        System.out.println("Search for pineapple: " + binarySearch("pineapple", s, 0, s.length)); // true
        System.out.println("Search for orange: " + binarySearch("orange", s, 0, s.length)); // true
       System.out.println("Search for banana: " + binarySearch("banana", s, 0, s.length)); // false
        
        
        System.out.println("bb".compareTo("aa")); 
    }

    // Searches for element key in array x using binary search.
    // Returns true if key is in x, false otherwise.
    public static boolean binarySearch(String key, String[] x, int start, int end) {
        if (start > end) {
            return false; //changed from 0 to false
        }
        int middle = (start + end) / 2;
        if (x[middle].equals(key)) {
            return true;
        } else if (x[middle].compareTo(key) == -1) { // you can't use < for string types, so I am comparing them with .compareTo
            return binarySearch(key, x, middle+1, end+1); //changed end to end+1
        } else {
            return binarySearch(key, x, start, middle);
            
        }
    }

}