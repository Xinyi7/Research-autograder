<question>
<title>WrongReduceString1</title>
<type>JavaCode</type>
<points>6</points>
<text>
The following method is supposed to generate a reduced version of a given string, where all consecutively repeated characters are replaced with a single one. For example, reduce("loooottts of   $$$$$") should return "lots of $". However, the implementation contains two mistakes. Find the mistakes and fix them.
</text>
<init>
public class ReduceString {

    public static String reduce(String s) {
        if (s.length() < 2) {
            return s;
        }
        int n = s.length();
        String result = "" + s.charAt(n);
        while (n > 1) {
            char c = s.charAt(n - 1);
            if (c != s.charAt(n)) {
                result = c + result;
            }
            n--;
        }
        return result;
    }

    public static void main(String[] args) {
        System.out.println(reduce("loooottts of   $$$$$!")); // lots of $!
        System.out.println(reduce("AA")); // A
        System.out.println(reduce("B")); // B
    }
}
</init>
<answer>
public class ReduceString {

    public static String reduce(String s) {
        if (s.length() < 2) {
            return s;
        }
        int n = s.length() - 1; // subtract 1
        String result = "" + s.charAt(n);
        while (n > 0) { // replace 1 with 0
            char c = s.charAt(n - 1);
            if (c != s.charAt(n)) {
                result = c + result;
            }
            n--;
        }
        return result;
    }

    public static void main(String[] args) {
        System.out.println(reduce("loooottts of   $$$$$!")); // lots of $!
        System.out.println(reduce("AA")); // A
        System.out.println(reduce("B")); // B
    }
}
</answer>
<rubric>
6 points: both mistakes are fixed
3 points: only one mistake is fixed
-3 points for each new mistake introduced
No credit if the program doesn't compile or crashes
</rubric>
</question>

